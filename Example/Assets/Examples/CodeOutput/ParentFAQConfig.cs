// Generated by github.com/davyxu/tabtoy
// Version: 2.8.4
// DO NOT EDIT!!
using System.Collections.Generic;

namespace UExcelReader
{
	
	

	// Defined in table: ParentFAQConfig
	
	public partial class ParentFAQConfig
	{
	
		public tabtoy.Logger TableLogger = new tabtoy.Logger();
	
		
		/// <summary> 
		/// ParentFAQ
		/// </summary>
		public List<ParentFAQDefine> ParentFAQ = new List<ParentFAQDefine>(); 
	
	
		#region Index code
	 	Dictionary<string, ParentFAQDefine> _ParentFAQByKey = new Dictionary<string, ParentFAQDefine>();
        public ParentFAQDefine GetParentFAQByKey(string Key, ParentFAQDefine def = default(ParentFAQDefine))
        {
            ParentFAQDefine ret;
            if ( _ParentFAQByKey.TryGetValue( Key, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(ParentFAQDefine) )
			{
				TableLogger.ErrorLine("GetParentFAQByKey failed, Key: {0}", Key);
			}

            return def;
        }
		
	
		#endregion
		#region Deserialize code
		
		static tabtoy.DeserializeHandler<ParentFAQConfig> ParentFAQConfigDeserializeHandler = new tabtoy.DeserializeHandler<ParentFAQConfig>(Deserialize);
		public static void Deserialize( ParentFAQConfig ins, tabtoy.DataReader reader )
		{
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0xa0000:
                	{
						ins.ParentFAQ.Add( reader.ReadStruct<ParentFAQDefine>(ParentFAQDefineDeserializeHandler) );
                	}
                	break; 
                }
             }

			
			// Build ParentFAQ Index
			for( int i = 0;i< ins.ParentFAQ.Count;i++)
			{
				var element = ins.ParentFAQ[i];
				
				ins._ParentFAQByKey.Add(element.Key, element);
				
			}
			
		}
		static tabtoy.DeserializeHandler<ParentFAQDefine> ParentFAQDefineDeserializeHandler = new tabtoy.DeserializeHandler<ParentFAQDefine>(Deserialize);
		public static void Deserialize( ParentFAQDefine ins, tabtoy.DataReader reader )
		{
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0x60000:
                	{
						ins.Key = reader.ReadString();
                	}
                	break; 
                	case 0x60001:
                	{
						ins.Title = reader.ReadString();
                	}
                	break; 
                	case 0x60002:
                	{
						ins.Content = reader.ReadString();
                	}
                	break; 
                }
             }

			
		}
		#endregion
	

	} 

	// Defined in table: ParentFAQ
	
	public partial class ParentFAQDefine
	{
	
		
		/// <summary> 
		/// 问题索引
		/// </summary>
		public string Key = ""; 
		
		/// <summary> 
		/// 标题
		/// </summary>
		public string Title = ""; 
		
		/// <summary> 
		/// 内容
		/// </summary>
		public string Content = ""; 
	
	

	} 

}
